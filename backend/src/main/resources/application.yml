spring:
  application:
    name: backend
  server:
    port: 8080
  web:
    resources:
      static-locations: file:uploads/
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true
    # session:
    #   tracking-modes: cookie
    #   cookie:
    #     http-only: true
    #     secure: false
  # MySQL
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USER}
    password: ${DATASOURCE_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        connection:
          characterEncoding: utf8mb4
          useUnicode: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  # Google OAuth2
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 23955059535-ms7k1vo9hcgjdfhkoup7u3i01pqecq4u.apps.googleusercontent.com
            client-secret: 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
            scope: openid,profile,email
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth?access_type=offline&prompt=consent
            token-uri: https://oauth2.googleapis.com/token
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
            user-name-attribute: sub
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

# Logging
logging:
  level:
    org:
      springframework:
        security:
          oauth2: TRACE
        web: DEBUG
    com:
      pms:
        backend: DEBUG

#endpoint Prometheus
management:
  endpoints:
    web:
      exposure:
        include: prometheus, health
  metrics:
    export:
      prometheus:
        enabled: true

frontend:
  url: ${FRONTEND_URL}
